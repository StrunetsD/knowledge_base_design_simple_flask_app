# app_frontend.py
import streamlit as st
from models import *
from db_conn import get_session
from datetime import date
from decimal import Decimal
from db_requests import *
from sqlalchemy.orm import joinedload

st.set_page_config(
    page_title="–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î",
    page_icon="üß™",
    layout="wide"
)

def main_menu():
    st.sidebar.title("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤")
    st.sidebar.info("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    menu_options = [
        "üìä –û–±–∑–æ—Ä –¥–∞–Ω–Ω—ã—Ö",
        "üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
        "üìö –ö—É—Ä—Å—ã",
        "üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏",
        "üìù –ó–∞—è–≤–∫–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ",
        "üí∞ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç",
        "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
        "üë• –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø",
        "üîó –°–≤—è–∑–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –∫—É—Ä—Å–æ–≤"  
    ]
    
    choice = st.sidebar.selectbox("–ú–µ–Ω—é", menu_options)
    
    if choice == "üìä –û–±–∑–æ—Ä –¥–∞–Ω–Ω—ã—Ö":
        show_dashboard()
    elif choice == "üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏":
        organizations_section()
    elif choice == "üìö –ö—É—Ä—Å—ã":
        courses_section()
    elif choice == "üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏":
        instructors_section()
    elif choice == "üìù –ó–∞—è–≤–∫–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ":
        training_requests_section()
    elif choice == "üí∞ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç":
        price_list_section()
    elif choice == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        schedule_section()
    elif choice == "üë• –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø":
        groups_fill_section()
    elif choice == "üîó –°–≤—è–∑–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –∫—É—Ä—Å–æ–≤": 
        course_instructor_links_section()

def show_dashboard():
    st.title("üìä –û–±–∑–æ—Ä –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ")
    
    with get_session() as session:
        col1, col2, col3, col4 = st.columns(4)
        
        org_count = session.query(Organization).count()
        col1.metric("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", org_count)
        
        course_count = session.query(Course).count()
        col2.metric("–ö—É—Ä—Å—ã", course_count)
        
        instructor_count = session.query(Instructor).count()
        col3.metric("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏", instructor_count)
        
        request_count = session.query(TrainingRequest).count()
        col4.metric("–ó–∞—è–≤–∫–∏", request_count)
        
        st.subheader("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
        orgs = session.query(Organization).order_by(Organization.id.desc()).limit(5).all()
        for org in orgs:
            st.write(f"**{org.name}**-{org.address}")
        
        st.subheader("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫—É—Ä—Å—ã")
        courses = session.query(Course).order_by(Course.id.desc()).limit(5).all()
        for course in courses:
            st.write(f"**{course.name}**")

def organizations_section():
    st.title("üè¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏")
    
    with get_session() as session:
        tab1, tab2, tab3 = st.tabs(["–ü—Ä–æ—Å–º–æ—Ç—Ä", "–î–æ–±–∞–≤–∏—Ç—å", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/–£–¥–∞–ª–∏—Ç—å"])
        
        with tab1:
            st.subheader("–í—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
            organizations = session.query(Organization).all()
            if organizations:
                for org in organizations:
                    with st.expander(f"{org.name} ({org.code})"):
                        st.write(f"**ID:** {org.id}")
                        st.write(f"**–ê–¥—Ä–µ—Å:** {org.address}")
                        st.write(f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {org.phone or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                        st.write(f"**Email:** {org.email or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            else:
                st.info("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        with tab2:
            st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é")
            with st.form("add_org_form"):
                code = st.text_input("–ö–æ–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏*")
                name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ*")
                address = st.text_area("–ê–¥—Ä–µ—Å*")
                phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω")
                email = st.text_input("Email")
                
                if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é"):
                    if code and name and address:
                        try:
                            org = add_organization(session, code, name, address, phone, email)
                            st.success(f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è '{org.name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                        except Exception as e:
                            st.error(f"–û—à–∏–±–∫–∞: {e}")
                    else:
                        st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã *)")
        
        with tab3:
            st.subheader("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ")
            orgs = session.query(Organization).all()
            if orgs:
                org_options = {f"{org.name} ({org.code})": org.id for org in orgs}
                selected_org = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é", list(org_options.keys()))
                
                if selected_org:
                    org_id = org_options[selected_org]
                    org = session.get(Organization, org_id)
                    
                    with st.form("edit_org_form"):
                        st.write(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {org.name}")
                        new_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ", value=org.name)
                        new_address = st.text_area("–ê–¥—Ä–µ—Å", value=org.address)
                        new_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", value=org.phone or "")
                        new_email = st.text_input("Email", value=org.email or "")
                        
                        if st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"):
                            update_organization(session, org_id, 
                                              name=new_name,
                                              address=new_address,
                                              phone=new_phone,
                                              email=new_email)
                            st.success("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
                    
                    if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é", type="secondary"):
                        if delete_organization(session, org_id):
                            st.success("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞!")
                            st.rerun()
                        else:
                            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é")
            else:
                st.info("–ù–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

def courses_section():
    st.title("üìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –∫—É—Ä—Å–∞–º–∏")
    
    with get_session() as session:
        tab1, tab2, tab3, tab4 = st.tabs(["–ü—Ä–æ—Å–º–æ—Ç—Ä", "–î–æ–±–∞–≤–∏—Ç—å", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/–£–¥–∞–ª–∏—Ç—å", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏"])
        
        with tab1:
            st.subheader("–í—Å–µ –∫—É—Ä—Å—ã")
            courses = session.query(Course).options(joinedload(Course.instructors)).all()
            if courses:
                for course in courses:
                    org = session.get(Organization, course.organization_id)
                    with st.expander(f"{course.name} ({course.code})"):
                        st.write(f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:** {org.name if org else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
                        st.write(f"**–¢–∏–ø:** {course.course_type}")
                        st.write(f"**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {course.duration_days} –¥–Ω–µ–π")
                        st.write(f"**–ú–∞–∫—Å. —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:** {course.max_students}")
                        
                        if course.instructors:
                            st.write("**–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:**")
                            for instructor in course.instructors:
                                st.write(f"- {instructor.full_name}")
                        else:
                            st.write("**–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:** –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã")
            else:
                st.info("–ö—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        with tab2:
            st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫—É—Ä—Å")
            orgs = session.query(Organization).all()
            if orgs:
                org_options = {org.name: org.id for org in orgs}
                
                with st.form("add_course_form"):
                    code = st.text_input("–ö–æ–¥ –∫—É—Ä—Å–∞*")
                    name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ*")
                    organization = st.selectbox("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è*", list(org_options.keys()))
                    course_type = st.selectbox("–¢–∏–ø –∫—É—Ä—Å–∞*", [ct.value for ct in CourseType])
                    duration = st.number_input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–¥–Ω–µ–π)*", min_value=1, value=30)
                    max_students = st.number_input("–ú–∞–∫—Å. —Å—Ç—É–¥–µ–Ω—Ç–æ–≤*", min_value=1, value=20)
                    
                    if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å"):
                        if code and name:
                            try:
                                org_id = org_options[organization]
                                course = add_course(session, code, name, course_type, 
                                                  duration, max_students, org_id)
                                st.success(f"–ö—É—Ä—Å '{course.name}' –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                            except Exception as e:
                                st.error(f"–û—à–∏–±–∫–∞: {e}")
                        else:
                            st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã *)")
            else:
                st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
        
        with tab3:
            st.subheader("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ")
            courses = session.query(Course).all()
            if courses:
                course_options = {f"{course.name} ({course.code})": course.id for course in courses}
                selected_course = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å", list(course_options.keys()))
                
                if selected_course:
                    course_id = course_options[selected_course]
                    course = session.get(Course, course_id)
                    
                    with st.form("edit_course_form"):
                        st.write(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {course.name}")
                        new_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ", value=course.name)
                        new_type = st.selectbox("–¢–∏–ø –∫—É—Ä—Å–∞", [ct for ct in CourseType], format_func=lambda ct: ct.value)
                        index = [ct for ct in CourseType].index(course.course_type)
                        new_duration = st.number_input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–¥–Ω–µ–π)", 
                                                     min_value=1, value=course.duration_days)
                        new_max_students = st.number_input("–ú–∞–∫—Å. —Å—Ç—É–¥–µ–Ω—Ç–æ–≤", 
                                                         min_value=1, value=course.max_students)
                        
                        if st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"):
                            update_course(session, course_id, 
                                         name=new_name,
                                         course_type=new_type,
                                         duration_days=new_duration,
                                         max_students=new_max_students)
                            st.success("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
                    
                    if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å", type="secondary"):
                        if delete_course(session, course_id):
                            st.success("–ö—É—Ä—Å —É–¥–∞–ª–µ–Ω!")
                            st.rerun()
                        else:
                            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å")
            else:
                st.info("–ù–µ—Ç –∫—É—Ä—Å–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        with tab4:
            st.subheader("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –∫—É—Ä—Å–∞")
            courses = session.query(Course).all()
            if courses:
                course_options = {f"{course.name} ({course.code})": course.id for course in courses}
                selected_course = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å", list(course_options.keys()), key="course_select")
                
                if selected_course:
                    course_id = course_options[selected_course]
                    course = session.get(Course, course_id)
                    
                    st.write("–¢–µ–∫—É—â–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:")
                    if course.instructors:
                        for instructor in course.instructors:
                            st.write(f"- {instructor.full_name}")
                            if st.button(f"–£–¥–∞–ª–∏—Ç—å {instructor.full_name}", key=f"remove_{instructor.id}"):
                                remove_instructor_from_course(session, course_id, instructor.id)
                                st.success(f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {instructor.full_name} —É–¥–∞–ª–µ–Ω —Å –∫—É—Ä—Å–∞")
                                st.rerun()
                    else:
                        st.info("–ù–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")
                    
                    st.write("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:")
                    available_instructors = session.query(Instructor).filter(~Instructor.courses.any(id=course_id)).all()
                    
                    if available_instructors:
                        instructor_options = {instr.full_name: instr.id for instr in available_instructors}
                        selected_instructor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", list(instructor_options.keys()))
                        
                        if st.button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"):
                            instructor_id = instructor_options[selected_instructor]
                            if assign_instructor_to_course(session, course_id, instructor_id):
                                st.success("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ –∫—É—Ä—Å!")
                                st.rerun()
                            else:
                                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
                    else:
                        st.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å")
            else:
                st.info("–ù–µ—Ç –∫—É—Ä—Å–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

def instructors_section():
    st.title("üë®‚Äçüè´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏")
    
    with get_session() as session:
        tab1, tab2, tab3, tab4 = st.tabs(["–ü—Ä–æ—Å–º–æ—Ç—Ä", "–î–æ–±–∞–≤–∏—Ç—å", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/–£–¥–∞–ª–∏—Ç—å", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏"])
        
        with tab1:
            st.subheader("–í—Å–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")
            instructors = session.query(Instructor).options(joinedload(Instructor.courses)).all()
            if instructors:
                for instructor in instructors:
                    with st.expander(instructor.full_name):
                        st.write(f"**–ù–æ–º–µ—Ä:** {instructor.number}")
                        st.write(f"**–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:** {instructor.birth_date}")
                        st.write(f"**–ü–æ–ª:** {instructor.gender}")
                        st.write(f"**–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:** {instructor.education}")
                        st.write(f"**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {instructor.category.value}")
                        
                        if instructor.courses:
                            st.write("**–ö—É—Ä—Å—ã:**")
                            for course in instructor.courses:
                                st.write(f"- {course.name}")
                        else:
                            st.write("**–ö—É—Ä—Å—ã:** –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω")
            else:
                st.info("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        with tab2:
            st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
            with st.form("add_instructor_form"):
                number = st.text_input("–ù–æ–º–µ—Ä –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è*")
                full_name = st.text_input("–§–ò–û*")
                birth_date = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è*", value=date(1980, 1, 1))
                gender_str = st.selectbox("–ü–æ–ª", ["–ú", "–ñ"])
                education = st.text_input("–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ*")
                category_str = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è*", ["–≤—ã—Å—à–∞—è", "–ø–µ—Ä–≤–∞—è", "–≤—Ç–æ—Ä–∞—è"])
                
                if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"):
                    if number and full_name and education:
                        try:
                            instructor = add_instructor(
                                session,
                                number,
                                full_name,
                                birth_date,
                                gender_str,
                                education,
                                category_str
                            )
                            st.success(f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å '{instructor.full_name}' –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                        except Exception as e:
                            st.error(f"–û—à–∏–±–∫–∞: {e}")
                    else:
                        st.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã *)")
        
        with tab3:
            st.subheader("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ")
            instructors = session.query(Instructor).all()
            if instructors:
                instructor_options = {f"{instr.full_name} ({instr.number})": instr.id for instr in instructors}
                selected_instructor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", list(instructor_options.keys()))
                
                if selected_instructor:
                    instructor_id = instructor_options[selected_instructor]
                    instructor = session.get(Instructor, instructor_id)
                    
                    with st.form("edit_instructor_form"):
                        st.write(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {instructor.full_name}")
                        new_full_name = st.text_input("–§–ò–û", value=instructor.full_name)
                        new_birth_date = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", value=instructor.birth_date)
                        new_gender = st.selectbox("–ü–æ–ª", ["–ú", "–ñ"], 
                                                index=0 if instructor.gender == "–ú" else 1)
                        new_education = st.text_input("–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", value=instructor.education)
                        new_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", 
                                                  ["–≤—ã—Å—à–∞—è", "–ø–µ—Ä–≤–∞—è", "–≤—Ç–æ—Ä–∞—è"],
                                                  index=["–≤—ã—Å—à–∞—è", "–ø–µ—Ä–≤–∞—è", "–≤—Ç–æ—Ä–∞—è"].index(instructor.category.value))
                        
                        if st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"):
                            update_instructor(session, instructor_id, 
                                            full_name=new_full_name,
                                            birth_date=new_birth_date,
                                            gender=new_gender,
                                            education=new_education,
                                            category=new_category)
                            st.success("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
                    
                    if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", type="secondary"):
                        if delete_instructor(session, instructor_id):
                            st.success("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω!")
                            st.rerun()
                        else:
                            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
            else:
                st.info("–ù–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        with tab4:
            st.subheader("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
            instructors = session.query(Instructor).all()
            if instructors:
                instructor_options = {f"{instr.full_name} ({instr.number})": instr.id for instr in instructors}
                selected_instructor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", list(instructor_options.keys()), key="instructor_select")
                
                if selected_instructor:
                    instructor_id = instructor_options[selected_instructor]
                    instructor = session.get(Instructor, instructor_id)
                    
                    st.write("–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:")
                    if instructor.courses:
                        for course in instructor.courses:
                            st.write(f"- {course.name}")
                            if st.button(f"–£–¥–∞–ª–∏—Ç—å {course.name}", key=f"remove_{course.id}"):
                                remove_instructor_from_course(session, course.id, instructor_id)
                                st.success(f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω —Å –∫—É—Ä—Å–∞ {course.name}")
                                st.rerun()
                    else:
                        st.info("–≠—Ç–æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –∫—É—Ä—Å—ã")
                    
                    st.write("–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å:")
                    available_courses = session.query(Course).filter(~Course.instructors.any(id=instructor_id)).all()
                    
                    if available_courses:
                        course_options = {course.name: course.id for course in available_courses}
                        selected_course = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å", list(course_options.keys()))
                        
                        if st.button("–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å"):
                            course_id = course_options[selected_course]
                            if assign_instructor_to_course(session, course_id, instructor_id):
                                st.success("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ –∫—É—Ä—Å!")
                                st.rerun()
                            else:
                                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Ä—Å")
                    else:
                        st.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
            else:
                st.info("–ù–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

def training_requests_section():
    st.title("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ")
    
    with get_session() as session:
        tab1, tab2 = st.tabs(["–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫", "–î–æ–±–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"])
        
        with tab1:
            st.subheader("–í—Å–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ")
            requests = session.query(TrainingRequest).options(
                joinedload(TrainingRequest.client_organization),
                joinedload(TrainingRequest.course)
            ).all()
            
            if requests:
                for req in requests:
                    with st.expander(f"–ó–∞—è–≤–∫–∞ #{req.id}"):
                        st.write(f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:** {req.client_organization.name}")
                        st.write(f"**–ö—É—Ä—Å:** {req.course.name}")
                        st.write(f"**–ü–µ—Ä–∏–æ–¥:** {req.requested_start_date} - {req.requested_end_date}")
                        st.write(f"**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:** {req.number_of_students}")
                        st.write(f"**–ö–æ–Ω—Ç–∞–∫—Ç—ã:** {req.contact_phone}, {req.contact_email}")
            else:
                st.info("–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        with tab2:
            st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É")
            orgs = session.query(Organization).all()
            courses = session.query(Course).all()
            
            if orgs and courses:
                org_options = {org.name: org.id for org in orgs}
                course_options = {course.name: course.id for course in courses}
                
                with st.form("add_request_form"):
                    organization = st.selectbox("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è*", list(org_options.keys()))
                    course = st.selectbox("–ö—É—Ä—Å*", list(course_options.keys()))
                    start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞*", value=date.today())
                    end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è*", value=date.today())
                    students_count = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤*", min_value=1, value=10)
                    contact_phone = st.text_input("–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω*")
                    contact_email = st.text_input("–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π email*")
                    
                    if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"):
                        try:
                            org_id = org_options[organization]
                            course_id = course_options[course]
                            request = add_training_request(session, org_id, course_id, 
                                                         start_date, end_date, students_count,
                                                         contact_phone, contact_email)
                            st.success(f"–ó–∞—è–≤–∫–∞ #{request.id} –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                        except Exception as e:
                            st.error(f"–û—à–∏–±–∫–∞: {e}")
            else:
                st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ –∫—É—Ä—Å—ã")

def price_list_section():
    st.title("üí∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞")
    
    with get_session() as session:
        st.subheader("–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É")
        
        orgs = session.query(Organization).all()
        if orgs:
            org_options = {org.name: org.id for org in orgs}
            selected_org = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é", list(org_options.keys()))
            target_date = st.date_input("–î–∞—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ü–µ–Ω", value=date.today())
            
            if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç"):
                org_id = org_options[selected_org]
                prices = get_price_list(session, org_id, target_date)
                
                if prices:
                    st.write(f"–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ '{selected_org}' –Ω–∞ {target_date}:")
                    for price in prices:
                        st.write(f"**{price.name}** - {price.duration_days} –¥–Ω–µ–π: "
                               f"{price.price} —Ä—É–±. (—Å –ù–î–°: {price.price_with_vat:.2f} —Ä—É–±.)")
                else:
                    st.info("–¶–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã.")
        else:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.")

def schedule_section():
    st.title("üìÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
    
    with get_session() as session:
        st.subheader("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è")
        
        instructors = session.query(Instructor).all()
        if instructors:
            instructor_options = {instructor.full_name: instructor.id for instructor in instructors}
            selected_instructor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", list(instructor_options.keys()))
            start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", value=date.today())
            end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è", value=date.today())
            
            if st.button("–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"):
                instructor_id = instructor_options[selected_instructor]
                schedule = get_instructor_schedule(session, instructor_id, start_date, end_date)
                
                if schedule:
                    st.write(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è '{selected_instructor}' —Å {start_date} –ø–æ {end_date}:")
                    for item in schedule:
                        st.write(f"**{item.name}**: {item.start_date} - {item.end_date}")
                else:
                    st.info("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.")
        else:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.")

def groups_fill_section():
    st.title("üë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø")
    
    with get_session() as session:
        st.subheader("–ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø –¥–ª—è –∫—É—Ä—Å–∞")
        
        courses = session.query(Course).all()
        if courses:
            course_options = {course.name: course.id for course in courses}
            selected_course = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å", list(course_options.keys()))
            start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", value=date.today())
            end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è", value=date.today())
            
            if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø"):
                course_id = course_options[selected_course]
                groups_fill = get_course_groups_fill(session, course_id, start_date, end_date)
                
                if groups_fill:
                    st.write(f"–ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø –¥–ª—è –∫—É—Ä—Å–∞ '{selected_course}' —Å {start_date} –ø–æ {end_date}:")
                    for group in groups_fill:
                        status = "–ø–æ–ª–Ω–∞—è" if group['is_full'] else "–Ω–µ–ø–æ–ª–Ω–∞—è"
                        st.write(f"–ì—Ä—É–ø–ø–∞ #{group['request_id']} ({group['start_date']} - {group['end_date']}): "
                                  f"{group['student_count']}/{group['max_students']} ({status})")
                else:
                    st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –≥—Ä—É–ø–ø –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.")
        else:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∫—É—Ä—Å—ã.")

def course_instructor_links_section():
    st.title("üîó –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑—è–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –∫—É—Ä—Å–æ–≤")
    
    with get_session() as session:
        tab1, tab2 = st.tabs(["–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Ä—Å", "–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Å–≤—è–∑–µ–π"])
        
        with tab1:
            st.subheader("–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Ä—Å")
            
            courses = session.query(Course).all()
            instructors = session.query(Instructor).all()
            
            if courses and instructors:
                course_options = {f"{course.name} ({course.code})": course.id for course in courses}
                instructor_options = {f"{instr.full_name} ({instr.number})": instr.id for instr in instructors}
                
                selected_course = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å", list(course_options.keys()))
                selected_instructor = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", list(instructor_options.keys()))
                
                if st.button("–ù–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Ä—Å"):
                    course_id = course_options[selected_course]
                    instructor_id = instructor_options[selected_instructor]
                    
                    course = session.get(Course, course_id)
                    instructor = session.get(Instructor, instructor_id)
                    
                    if instructor in course.instructors:
                        st.warning("–≠—Ç–æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å")
                    else:
                        if assign_instructor_to_course(session, course_id, instructor_id):
                            st.success(f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {selected_instructor} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –∫—É—Ä—Å {selected_course}")
                        else:
                            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –∫—É—Ä—Å")
            else:
                st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∫—É—Ä—Å—ã –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π")
        
        with tab2:
            st.subheader("–í—Å–µ —Å–≤—è–∑–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏ –∫—É—Ä—Å–æ–≤")
            
            courses = session.query(Course).options(joinedload(Course.instructors)).all()
            
            if courses:
                for course in courses:
                    with st.expander(f"{course.name} ({course.code})"):
                        if course.instructors:
                            st.write("**–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:**")
                            for instructor in course.instructors:
                                st.write(f"- {instructor.full_name} ({instructor.number})")
                                
                                if st.button(f"–£–¥–∞–ª–∏—Ç—å —Å–≤—è–∑—å —Å {instructor.full_name}", 
                                           key=f"remove_{course.id}_{instructor.id}"):
                                    if remove_instructor_from_course(session, course.id, instructor.id):
                                        st.success("–°–≤—è–∑—å —É–¥–∞–ª–µ–Ω–∞")
                                        st.rerun()
                                    else:
                                        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–≤—è–∑—å")
                        else:
                            st.info("–ù–∞ —ç—Ç–æ—Ç –∫—É—Ä—Å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")
            else:
                st.info("–ö—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    main_menu()